---
- name: host
  hosts: all
  

  tasks:
  - name: Install required system packages
    apt:
       pkg:
          - apt-transport-https
          - ca-certificates
          - software-properties-common
          - wget
          - gnupg
       state: latest
    become: true

  - name: Add repo to APT sources
    shell: "echo deb https://packages.sury.org/php/ $(lsb_release -sc) main > /etc/apt/sources.list.d/sury-php.list"
    become: true

  


  - name: Add an Apt signing key, uses whichever key is at the URL
    ansible.builtin.apt_key:
     url: https://packages.sury.org/php/apt.gpg
     state: present
    become: true






  - name: "Updating the repo"
    apt: update_cache=yes
    become: true

  - name: Install packages
    apt:
     pkg:
          - php8.1
          - php8.1-xml
          - php8.1-mysql
          - php8.1-dev
          - libapache2-mod-php
          - apache2
          - git
          - php8.1-zip
          - php8.1-dev
          - php8.1-curl
          - php8.1-mbstring
          - php8.1-gd
          - python3-pymysql
          

     state: latest
     update_cache: yes
    become: true
    become_user: root

  
  - name: Download sources
    action: shell wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb
    become: true


  - name: Install release package
    action: shell apt install ./mysql-apt-config_0.8.22-1_all.deb
    become: true

    



  

  - name: update packages
    apt:  name=* state=present
    become: true



  - name: Install MySQL
    apt: name=mysql-server state=present
    become: true

  

  - name: update packages
    apt:  name=* state=present
    become: true


  - name: start up the mysql service  
    shell: "service mysql start"
    become: true

  
  - name: ensure mysql is enabled to run on startup  
    service: name=mysql state=started enabled=true
    become: true

  

  

  

     

  - name: download composer installer
    get_url:
     url: https://getcomposer.org/installer
     dest: /tmp/composer
    become: true


  - name: install composer
    shell: php /tmp/composer --install-dir=/usr/local/bin
    become: true


  - name: rename composer executable
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
    become: true


  - name: set permissions for composer file
    file:
        path: /usr/local/bin/composer
        mode: a+x
        state: file
    become: true




  - name: clone repo from github
    git:
        repo: https://github.com/f1amy/laravel-realworld-example-app.git
        dest: /var/www/app
        force: yes
    become: true

  - name: copy env file
    copy:
       src: /var/www/app/.env.example
       remote_src: yes
       dest: /var/www/app/.env
       owner: "{{ ansible_effective_user_id }}"
       group: "{{ ansible_effective_group_id }}"
       mode: '0644'
    become: true

  

  - name: Update mysql root password for all root accounts
    mysql_user: name=root password=debian priv=*.*:ALL state=present login_unix_socket=/var/run/mysqld/mysqld.sock
    become: true

  
  
  

  
    

  - name: Create MySQL DB
    mysql_db: name=laravel state=present login_user=root login_password=debian
    become: true


  - name: set DB_DATABASE
    lineinfile: dest=/var/www/app/.env regexp='^DB_DATABASE=' line=DB_DATABASE=laravel
    become: true

  - name: set DB_USERNAME
    lineinfile: dest=/var/www/app/.env regexp='^DB_USERNAME=' line=DB_USERNAME=root
    become: true

  - name: set DB_PASSWORD
    lineinfile: dest=/var/www/app/.env regexp='^DB_PASSWORD=' line=DB_PASSWORD=debian
    become: true

  - name: set DB_CONNECTION
    lineinfile: dest=/var/www/app/.env regexp='^DB_CONNECTION=' line=DB_CONNECTION=mysql
    become: true

  - name: set DB_HOST
    lineinfile: dest=/var/www/app/.env regexp='^DB_HOST=' line=DB_HOST=127.0.0.1
    become: true


    

  - name: set DB_PORT
    lineinfile: dest=/var/www/app/.env regexp='^DB_PORT=' line=DB_PORT=3306
    become: true

  - name: set APP_NAME
    lineinfile: dest=/var/www/app/.env regexp='^APP_NAME=' line=APP_NAME=app
    become: true


  - name: set APP_URL
    lineinfile: dest=/var/www/app/.env regexp='^APP_URL=' line=APP_URL=http://52.91.80.109
    become: true

  
  
  



  - name: take ownership of myapp folder
    file:
        path: /var/www/app
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
    become: yes
    
  - name: set permissions for Laravel storage folder
    file:
        path: /var/www/app/storage
        state: directory
        recurse: yes
        mode: '0755'
    become: yes


  
  - name: install laravel dependencies
    composer:
        command: install
        working_dir: /var/www/app
    

  
  
  - name: copy apache config
    copy:
        src: app.conf
        dest: /etc/apache2/sites-available/app.conf
        owner: "{{ ansible_effective_user_id }}"
        group: "{{ ansible_effective_group_id }}"
        mode: '0644'
    become: true

    


  




  - name: enable the new config
    shell: |
        a2ensite app.conf
        a2dissite 000-default.conf
        a2enmod rewrite
        service apache2 restart
    become: true

  


  - name: setup laravel
    shell: |
        cd /var/www/app
        php artisan key:generate
    become: true

  - name: setup laravel
    shell: |
        cd /var/www/app
        php artisan migrate --seed
    become: true


     

  - name: restart apache2
    shell: service apache2 restart
    become: true  
    
    


  




      





  
